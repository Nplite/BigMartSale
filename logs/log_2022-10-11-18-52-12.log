2022-10-11 at 18:52:35 | INFO |render_log_dir |
 req_path: logs
2022-10-11 at 18:52:41 | INFO |render_log_dir |
 req_path: logs/log_2022-10-11-18-52-12.log
2022-10-11 at 18:53:17 | INFO |get_training_pipeline_config |
 Training pipeline config: TrainingPipelineConfig(experiment_id='19bec607-a0c3-4971-bf66-540bfce548cb', previous_experiment_id=None, artifact_dir='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact', experiment_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\experiment\\experiment.csv')
2022-10-11 at 18:53:17 | INFO |run_pipeline |
 Pipeline starting.
2022-10-11 at 18:53:17 | INFO |run_pipeline |
 Pipeline experiment: 19bec607-a0c3-4971-bf66-540bfce548cb
2022-10-11 at 18:53:17 | INFO |get_data_ingestion_config |
 Data Ingestion config: DataIngestionConfig(train_dataset_download_url='https://raw.githubusercontent.com/pk1308/datasets/master/BigMartSales/Train.csv', raw_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_ingestion\\19bec607-a0c3-4971-bf66-540bfce548cb\\raw_data\\Train.csv', ingested_test_data_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_ingestion\\19bec607-a0c3-4971-bf66-540bfce548cb\\ingested_data\\Test.csv', ingested_train_data_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_ingestion\\19bec607-a0c3-4971-bf66-540bfce548cb\\ingested_data\\Train.csv')
2022-10-11 at 18:53:17 | INFO |__init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-10-11 at 18:53:19 | INFO |download_data |
 Downloading file from :[https://raw.githubusercontent.com/pk1308/datasets/master/BigMartSales/Train.csv] into :[C:\Users\Nplite\Desktop\BigMart-Sales-Data-master\BigmartsalesPrediction\app_artifact\data_ingestion\19bec607-a0c3-4971-bf66-540bfce548cb\raw_data\Train.csv]
2022-10-11 at 18:53:19 | INFO |split_data_as_train_test |
 Reading csv file: [C:\Users\Nplite\Desktop\BigMart-Sales-Data-master\BigmartsalesPrediction\app_artifact\data_ingestion\19bec607-a0c3-4971-bf66-540bfce548cb\raw_data\Train.csv]
2022-10-11 at 18:53:19 | INFO |split_data_as_train_test |
 Splitting data into train and test
2022-10-11 at 18:53:19 | INFO |split_data_as_train_test |
 Exporting training dataset to file: [C:\Users\Nplite\Desktop\BigMart-Sales-Data-master\BigmartsalesPrediction\app_artifact\data_ingestion\19bec607-a0c3-4971-bf66-540bfce548cb\ingested_data\Train.csv]
2022-10-11 at 18:53:19 | INFO |split_data_as_train_test |
 Exporting test dataset to file: [C:\Users\Nplite\Desktop\BigMart-Sales-Data-master\BigmartsalesPrediction\app_artifact\data_ingestion\19bec607-a0c3-4971-bf66-540bfce548cb\ingested_data\Test.csv]
2022-10-11 at 18:53:19 | INFO |split_data_as_train_test |
 Data Ingestion artifact:[DataIngestionArtifact(train_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_ingestion\\19bec607-a0c3-4971-bf66-540bfce548cb\\ingested_data\\Train.csv', test_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_ingestion\\19bec607-a0c3-4971-bf66-540bfce548cb\\ingested_data\\Test.csv', is_ingested=True, message='Data ingestion completed successfully.')]
2022-10-11 at 18:53:19 | INFO |__del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-10-11 at 18:53:19 | INFO |__init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Validation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-10-11 at 18:53:19 | INFO |is_train_test_file_exists |
 Checking if training and test file is available
2022-10-11 at 18:53:19 | INFO |is_train_test_file_exists |
 Is train and test file exists?-> True
2022-10-11 at 18:53:19 | INFO |get_train_and_previous_df |
 Previous experiment id is not available
2022-10-11 at 18:53:19 | INFO |get_and_save_data_drift_report |
 Previous dataframe is not available
2022-10-11 at 18:53:19 | INFO |get_train_and_previous_df |
 Previous experiment id is not available
2022-10-11 at 18:53:19 | INFO |save_data_drift_report_page |
 Previous dataframe is not available
2022-10-11 at 18:53:19 | INFO |initiate_data_validation |
 Data validation artifact: DataValidationArtifact(schema_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\config\\schema.yaml', report_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_validation\\19bec607-a0c3-4971-bf66-540bfce548cb\\report\\report.json', report_page_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_validation\\19bec607-a0c3-4971-bf66-540bfce548cb\\report\\report.html', is_validated=True, message='Data Validation performed successfully.')
2022-10-11 at 18:53:19 | INFO |__del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Validation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-10-11 at 18:53:19 | INFO |get_data_transformation_config |
 Data transformation config: DataTransformationConfig(transformed_train_dir='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_transformation\\19bec607-a0c3-4971-bf66-540bfce548cb\\data_transformation\\train', transformed_test_dir='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_transformation\\19bec607-a0c3-4971-bf66-540bfce548cb\\data_transformation\\test', preprocessed_object_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_transformation\\19bec607-a0c3-4971-bf66-540bfce548cb\\data_transformation\\preprocessed\\preprocessed.pkl')
2022-10-11 at 18:53:19 | INFO |__init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-10-11 at 18:53:19 | INFO |initiate_data_transformation |
 Obtaining preprocessing object.
2022-10-11 at 18:53:19 | INFO |get_data_transformer_object |
 Categorical columns: ['Item_Type', 'Outlet_Type']
2022-10-11 at 18:53:19 | INFO |get_data_transformer_object |
 Numerical columns: ['Item_Weight', 'Item_Visibility', 'Item_MRP']
2022-10-11 at 18:53:19 | INFO |initiate_data_transformation |
 Obtaining training and test file path.
2022-10-11 at 18:53:19 | INFO |initiate_data_transformation |
 Selected columns: dict_keys(['Item_Fat_Content', 'Item_Identifier', 'Item_MRP', 'Item_Outlet_Sales', 'Item_Type', 'Item_Visibility', 'Item_Weight', 'Outlet_Establishment_Year', 'Outlet_Identifier', 'Outlet_Location_Type', 'Outlet_Size', 'Outlet_Type'])
2022-10-11 at 18:53:19 | INFO |initiate_data_transformation |
 Loading training and test data as pandas dataframe.
2022-10-11 at 18:53:19 | INFO |initiate_data_transformation |
 Splitting input and target feature from training and testing dataframe.
2022-10-11 at 18:53:19 | INFO |initiate_data_transformation |
 Applying preprocessing object on training dataframe and testing dataframe
2022-10-11 at 18:53:56 | INFO |predict |
 predict called 
2022-10-11 at 18:54:16 | INFO |transform |
 Transforming data
2022-10-11 at 18:54:16 | INFO |transform |
 Transforming data
2022-10-11 at 18:54:16 | INFO |initiate_data_transformation |
 Saving transformed training and testing array.
2022-10-11 at 18:54:16 | INFO |initiate_data_transformation |
 Saving preprocessing object.
2022-10-11 at 18:54:16 | INFO |initiate_data_transformation |
 Data transformations artifact: DataTransformationArtifact(is_transformed=True, message='Data transformation successfully.', transformed_train_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_transformation\\19bec607-a0c3-4971-bf66-540bfce548cb\\data_transformation\\train\\Train.npz', transformed_test_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_transformation\\19bec607-a0c3-4971-bf66-540bfce548cb\\data_transformation\\test\\Test.npz', preprocessed_object_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\data_transformation\\19bec607-a0c3-4971-bf66-540bfce548cb\\data_transformation\\preprocessed\\preprocessed.pkl')
2022-10-11 at 18:54:16 | INFO |__del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-10-11 at 18:54:16 | INFO |get_model_trainer_config |
 Model trainer config: ModelTrainerConfig(trained_model_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\model_training\\19bec607-a0c3-4971-bf66-540bfce548cb\\trained_model\\model.pkl', base_accuracy=0.5, model_config_file_path='config\\model.yaml', stacked=True)
2022-10-11 at 18:54:16 | INFO |__init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-10-11 at 18:54:16 | INFO |initiate_model_trainer |
 Loading transformed training dataset
2022-10-11 at 18:54:16 | INFO |initiate_model_trainer |
 Loading transformed testing dataset
2022-10-11 at 18:54:16 | INFO |initiate_model_trainer |
 Splitting training and testing input and target feature
2022-10-11 at 18:54:16 | INFO |initiate_model_trainer |
 Extracting model config file path
2022-10-11 at 18:54:16 | INFO |initiate_model_trainer |
 Initializing model factory class using above model config file: config\model.yaml
2022-10-11 at 18:54:16 | INFO |initiate_model_trainer |
 Expected accuracy: 0.5
2022-10-11 at 18:54:16 | INFO |initiate_model_trainer |
 Initiating operation model selection
2022-10-11 at 18:54:16 | INFO |get_best_model |
 Started Initializing model from config file
2022-10-11 at 18:54:16 | INFO |class_for_name |
 Executing command: from <module 'sklearn.ensemble' from 'C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\venv\\lib\\site-packages\\sklearn\\ensemble\\__init__.py'> import RandomForestRegressor
2022-10-11 at 18:54:17 | INFO |class_for_name |
 Executing command: from <module 'xgboost' from 'C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\venv\\lib\\site-packages\\xgboost\\__init__.py'> import XGBRegressor
2022-10-11 at 18:54:17 | INFO |class_for_name |
 Executing command: from <module 'catboost' from 'C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\venv\\lib\\site-packages\\catboost\\__init__.py'> import CatBoostRegressor
2022-10-11 at 18:54:17 | INFO |get_best_model |
 Initialized model: [InitializedModelDetail(model_serial_number='model_1', model=RandomForestRegressor(), param_grid_search={'criterion': ['friedman_mse'], 'n_estimators': [100], 'max_depth': [5, 6, 8], 'max_features': ['auto']}, model_name='sklearn.ensemble.RandomForestRegressor'), InitializedModelDetail(model_serial_number='model_2', model=XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=None,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...), param_grid_search={'booster': ['gbtree', 'dart'], 'n_estimators': [100], 'learning_rate': [0.1, 0.001]}, model_name='xgboost.XGBRegressor'), InitializedModelDetail(model_serial_number='model_3', model=<catboost.core.CatBoostRegressor object at 0x000002494ECCBD30>, param_grid_search={'iterations': [100], 'learning_rate': [0.1, 0.2], 'depth': [4, 5], 'l2_leaf_reg': [0.4, 0.5]}, model_name='catboost.CatBoostRegressor')]
2022-10-11 at 18:54:17 | INFO |class_for_name |
 Executing command: from <module 'sklearn.model_selection' from 'C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
2022-10-11 at 18:54:17 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(estimator=RandomForestRegressor(),
             param_grid={'criterion': ['friedman_mse'], 'max_depth': [5, 6, 8],
                         'max_features': ['auto'], 'n_estimators': [100]}).cv=5
2022-10-11 at 18:54:17 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(cv=5, estimator=RandomForestRegressor(),
             param_grid={'criterion': ['friedman_mse'], 'max_depth': [5, 6, 8],
                         'max_features': ['auto'], 'n_estimators': [100]}).verbose=2
2022-10-11 at 18:54:17 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(cv=5, estimator=RandomForestRegressor(),
             param_grid={'criterion': ['friedman_mse'], 'max_depth': [5, 6, 8],
                         'max_features': ['auto'], 'n_estimators': [100]},
             verbose=2).n_jobs=-1
2022-10-11 at 18:54:17 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Finished" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best model: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 RandomForestRegressor(criterion='friedman_mse', max_depth=5)
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best Score: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 0.5947809473050513
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best Params: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 {'criterion': 'friedman_mse', 'max_depth': 5, 'max_features': 'auto', 'n_estimators': 100}
2022-10-11 at 18:54:25 | INFO |class_for_name |
 Executing command: from <module 'sklearn.model_selection' from 'C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
2022-10-11 at 18:54:25 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(estimator=XGBRegressor(base_score=None, booster=None,
                                    callbacks=None, colsample_bylevel=None,
                                    colsample_bynode=None,
                                    colsample_bytree=None,
                                    early_stopping_rounds=None,
                                    enable_categorical=False, eval_metric=None,
                                    gamma=None, gpu_id=None, grow_policy=None,
                                    importance_type=None,
                                    interaction_constraints=None,
                                    learning_rate=None, max_bin=None,
                                    max_cat_to_onehot=None, max_delta_step=None,
                                    max_depth=None, max_leaves=None,
                                    min_child_weight=None, missing=nan,
                                    monotone_constraints=None, n_estimators=100,
                                    n_jobs=None, num_parallel_tree=None,
                                    predictor=None, random_state=None,
                                    reg_alpha=None, reg_lambda=None, ...),
             param_grid={'booster': ['gbtree', 'dart'],
                         'learning_rate': [0.1, 0.001], 'n_estimators': [100]}).cv=5
2022-10-11 at 18:54:25 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(cv=5,
             estimator=XGBRegressor(base_score=None, booster=None,
                                    callbacks=None, colsample_bylevel=None,
                                    colsample_bynode=None,
                                    colsample_bytree=None,
                                    early_stopping_rounds=None,
                                    enable_categorical=False, eval_metric=None,
                                    gamma=None, gpu_id=None, grow_policy=None,
                                    importance_type=None,
                                    interaction_constraints=None,
                                    learning_rate=None, max_bin=None,
                                    max_cat_to_onehot=None, max_delta_step=None,
                                    max_depth=None, max_leaves=None,
                                    min_child_weight=None, missing=nan,
                                    monotone_constraints=None, n_estimators=100,
                                    n_jobs=None, num_parallel_tree=None,
                                    predictor=None, random_state=None,
                                    reg_alpha=None, reg_lambda=None, ...),
             param_grid={'booster': ['gbtree', 'dart'],
                         'learning_rate': [0.1, 0.001], 'n_estimators': [100]}).verbose=2
2022-10-11 at 18:54:25 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(cv=5,
             estimator=XGBRegressor(base_score=None, booster=None,
                                    callbacks=None, colsample_bylevel=None,
                                    colsample_bynode=None,
                                    colsample_bytree=None,
                                    early_stopping_rounds=None,
                                    enable_categorical=False, eval_metric=None,
                                    gamma=None, gpu_id=None, grow_policy=None,
                                    importance_type=None,
                                    interaction_constraints=None,
                                    learning_rate=None, max_bin=None,
                                    max_cat_to_onehot=None, max_delta_step=None,
                                    max_depth=None, max_leaves=None,
                                    min_child_weight=None, missing=nan,
                                    monotone_constraints=None, n_estimators=100,
                                    n_jobs=None, num_parallel_tree=None,
                                    predictor=None, random_state=None,
                                    reg_alpha=None, reg_lambda=None, ...),
             param_grid={'booster': ['gbtree', 'dart'],
                         'learning_rate': [0.1, 0.001], 'n_estimators': [100]},
             verbose=2).n_jobs=-1
2022-10-11 at 18:54:25 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training XGBRegressor Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training XGBRegressor Finished" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best model: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 XGBRegressor(base_score=0.5, booster='gbtree', callbacks=None,
             colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
             importance_type=None, interaction_constraints='',
             learning_rate=0.1, max_bin=256, max_cat_to_onehot=4,
             max_delta_step=0, max_depth=6, max_leaves=0, min_child_weight=1,
             missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=0,
             num_parallel_tree=1, predictor='auto', random_state=0, reg_alpha=0,
             reg_lambda=1, ...)
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best Score: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 0.57700209880066
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best Params: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 {'booster': 'gbtree', 'learning_rate': 0.1, 'n_estimators': 100}
2022-10-11 at 18:54:35 | INFO |class_for_name |
 Executing command: from <module 'sklearn.model_selection' from 'C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
2022-10-11 at 18:54:35 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(estimator=<catboost.core.CatBoostRegressor object at 0x000002494ECCBD30>,
             param_grid={'depth': [4, 5], 'iterations': [100],
                         'l2_leaf_reg': [0.4, 0.5],
                         'learning_rate': [0.1, 0.2]}).cv=5
2022-10-11 at 18:54:35 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(cv=5,
             estimator=<catboost.core.CatBoostRegressor object at 0x000002494ECCBD30>,
             param_grid={'depth': [4, 5], 'iterations': [100],
                         'l2_leaf_reg': [0.4, 0.5],
                         'learning_rate': [0.1, 0.2]}).verbose=2
2022-10-11 at 18:54:35 | INFO |update_property_of_class |
 Executing:$ GridSearchCV(cv=5,
             estimator=<catboost.core.CatBoostRegressor object at 0x000002494ECCBD30>,
             param_grid={'depth': [4, 5], 'iterations': [100],
                         'l2_leaf_reg': [0.4, 0.5],
                         'learning_rate': [0.1, 0.2]},
             verbose=2).n_jobs=-1
2022-10-11 at 18:54:35 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training CatBoostRegressor Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:40 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training CatBoostRegressor Finished" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:40 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best model: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:40 | INFO |execute_grid_search_operation |
 <catboost.core.CatBoostRegressor object at 0x00000249540C0710>
2022-10-11 at 18:54:40 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best Score: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:40 | INFO |execute_grid_search_operation |
 0.5986887809363471
2022-10-11 at 18:54:40 | INFO |execute_grid_search_operation |
 >>>>>>>>>>>>>>>>>>>> Best Params: >>>>>>>>>>>>>>>>>>>>
2022-10-11 at 18:54:40 | INFO |execute_grid_search_operation |
 {'depth': 4, 'iterations': 100, 'l2_leaf_reg': 0.4, 'learning_rate': 0.1}
2022-10-11 at 18:54:40 | INFO |get_best_model_from_grid_searched_best_model_list |
 Acceptable model found:GridSearchedBestModel(model_serial_number='model_1', model=RandomForestRegressor(), best_model=RandomForestRegressor(criterion='friedman_mse', max_depth=5), best_parameters={'criterion': 'friedman_mse', 'max_depth': 5, 'max_features': 'auto', 'n_estimators': 100}, best_score=0.5947809473050513)
2022-10-11 at 18:54:40 | INFO |get_best_model_from_grid_searched_best_model_list |
 Acceptable model found:GridSearchedBestModel(model_serial_number='model_3', model=<catboost.core.CatBoostRegressor object at 0x000002494ECCBD30>, best_model=<catboost.core.CatBoostRegressor object at 0x00000249540C0710>, best_parameters={'depth': 4, 'iterations': 100, 'l2_leaf_reg': 0.4, 'learning_rate': 0.1}, best_score=0.5986887809363471)
2022-10-11 at 18:54:40 | INFO |get_best_model_from_grid_searched_best_model_list |
 Best model: GridSearchedBestModel(model_serial_number='model_3', model=<catboost.core.CatBoostRegressor object at 0x000002494ECCBD30>, best_model=<catboost.core.CatBoostRegressor object at 0x00000249540C0710>, best_parameters={'depth': 4, 'iterations': 100, 'l2_leaf_reg': 0.4, 'learning_rate': 0.1}, best_score=0.5986887809363471)
2022-10-11 at 18:54:40 | INFO |initiate_model_trainer |
 Best model found on training dataset: GridSearchedBestModel(model_serial_number='model_3', model=<catboost.core.CatBoostRegressor object at 0x000002494ECCBD30>, best_model=<catboost.core.CatBoostRegressor object at 0x00000249540C0710>, best_parameters={'depth': 4, 'iterations': 100, 'l2_leaf_reg': 0.4, 'learning_rate': 0.1}, best_score=0.5986887809363471)
2022-10-11 at 18:54:40 | INFO |initiate_model_trainer |
 Extracting trained model list.
2022-10-11 at 18:54:40 | INFO |initiate_model_trainer |
 Model list: [RandomForestRegressor(criterion='friedman_mse', max_depth=5), XGBRegressor(base_score=0.5, booster='gbtree', callbacks=None,
             colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
             importance_type=None, interaction_constraints='',
             learning_rate=0.1, max_bin=256, max_cat_to_onehot=4,
             max_delta_step=0, max_depth=6, max_leaves=0, min_child_weight=1,
             missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=0,
             num_parallel_tree=1, predictor='auto', random_state=0, reg_alpha=0,
             reg_lambda=1, ...), <catboost.core.CatBoostRegressor object at 0x00000249540C0710>] , 3
2022-10-11 at 18:54:47 | INFO |get_stacked_model |
 Stacked model: StackingCVRegressor(meta_regressor=<catboost.core.CatBoostRegressor object at 0x00000249540A5198>,
                    regressors=[RandomForestRegressor(criterion='friedman_mse',
                                                      max_depth=5),
                                XGBRegressor(base_score=0.5, booster='gbtree',
                                             callbacks=None,
                                             colsample_bylevel=1,
                                             colsample_bynode=1,
                                             colsample_bytree=1,
                                             early_stopping_rounds=None,
                                             enable_categorical=False,
                                             eval_metric=N...
                                             importance_type=None,
                                             interaction_constraints='',
                                             learning_rate=0.1, max_bin=256,
                                             max_cat_to_onehot=4,
                                             max_delta_step=0, max_depth=6,
                                             max_leaves=0, min_child_weight=1,
                                             missing=nan,
                                             monotone_constraints='()',
                                             n_estimators=100, n_jobs=0,
                                             num_parallel_tree=1,
                                             predictor='auto', random_state=0,
                                             reg_alpha=0, reg_lambda=1, ...),
                                <catboost.core.CatBoostRegressor object at 0x00000249540C0710>])
2022-10-11 at 18:54:47 | INFO |initiate_model_trainer |
 Stacked model found: StackingCVRegressor(meta_regressor=<catboost.core.CatBoostRegressor object at 0x00000249540A5198>,
                    regressors=[RandomForestRegressor(criterion='friedman_mse',
                                                      max_depth=5),
                                XGBRegressor(base_score=0.5, booster='gbtree',
                                             callbacks=None,
                                             colsample_bylevel=1,
                                             colsample_bynode=1,
                                             colsample_bytree=1,
                                             early_stopping_rounds=None,
                                             enable_categorical=False,
                                             eval_metric=N...
                                             importance_type=None,
                                             interaction_constraints='',
                                             learning_rate=0.1, max_bin=256,
                                             max_cat_to_onehot=4,
                                             max_delta_step=0, max_depth=6,
                                             max_leaves=0, min_child_weight=1,
                                             missing=nan,
                                             monotone_constraints='()',
                                             n_estimators=100, n_jobs=0,
                                             num_parallel_tree=1,
                                             predictor='auto', random_state=0,
                                             reg_alpha=0, reg_lambda=1, ...),
                                <catboost.core.CatBoostRegressor object at 0x00000249540C0710>])
2022-10-11 at 18:54:47 | INFO |initiate_model_trainer |
 Stacked model list: [RandomForestRegressor(criterion='friedman_mse', max_depth=5), XGBRegressor(base_score=0.5, booster='gbtree', callbacks=None,
             colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
             early_stopping_rounds=None, enable_categorical=False,
             eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
             importance_type=None, interaction_constraints='',
             learning_rate=0.1, max_bin=256, max_cat_to_onehot=4,
             max_delta_step=0, max_depth=6, max_leaves=0, min_child_weight=1,
             missing=nan, monotone_constraints='()', n_estimators=100, n_jobs=0,
             num_parallel_tree=1, predictor='auto', random_state=0, reg_alpha=0,
             reg_lambda=1, ...), <catboost.core.CatBoostRegressor object at 0x00000249540C0710>, StackingCVRegressor(meta_regressor=<catboost.core.CatBoostRegressor object at 0x00000249540A5198>,
                    regressors=[RandomForestRegressor(criterion='friedman_mse',
                                                      max_depth=5),
                                XGBRegressor(base_score=0.5, booster='gbtree',
                                             callbacks=None,
                                             colsample_bylevel=1,
                                             colsample_bynode=1,
                                             colsample_bytree=1,
                                             early_stopping_rounds=None,
                                             enable_categorical=False,
                                             eval_metric=N...
                                             importance_type=None,
                                             interaction_constraints='',
                                             learning_rate=0.1, max_bin=256,
                                             max_cat_to_onehot=4,
                                             max_delta_step=0, max_depth=6,
                                             max_leaves=0, min_child_weight=1,
                                             missing=nan,
                                             monotone_constraints='()',
                                             n_estimators=100, n_jobs=0,
                                             num_parallel_tree=1,
                                             predictor='auto', random_state=0,
                                             reg_alpha=0, reg_lambda=1, ...),
                                <catboost.core.CatBoostRegressor object at 0x00000249540C0710>])] , 4
2022-10-11 at 18:54:47 | INFO |initiate_model_trainer |
 Evaluation all trained model on training and testing dataset both
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [RandomForestRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Train Score		 Test Score		 Average Score
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 0.6140453136799009		 0.5849506329024119		0.5991449694082172
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Diff test train accuracy: [0.029094680777489].
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Train root mean squared error: [1064.066337437224].
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Test root mean squared error: [1082.753421090486].
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Acceptable model found MetricInfoArtifact(model_name="RandomForestRegressor(criterion='friedman_mse', max_depth=5)", model_object=RandomForestRegressor(criterion='friedman_mse', max_depth=5), train_rmse=1064.066337437224, test_rmse=1082.753421090486, train_accuracy=0.6140453136799009, test_accuracy=0.5849506329024119, model_accuracy=0.5991449694082172, index_number=0). 
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [XGBRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Train Score		 Test Score		 Average Score
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 0.73001486132607		 0.5425225857726884		0.6224564174862725
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Diff test train accuracy: [0.18749227555338155].
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Train root mean squared error: [889.959973510163].
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 Test root mean squared error: [1136.748828978459].
2022-10-11 at 18:54:47 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [CatBoostRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Train Score		 Test Score		 Average Score
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 0.6247136238163542		 0.5878266028840662		0.6057090382273824
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Diff test train accuracy: [0.03688702093228802].
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Train root mean squared error: [1049.2571667403834].
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Test root mean squared error: [1078.9955796179067].
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Acceptable model found MetricInfoArtifact(model_name='<catboost.core.CatBoostRegressor object at 0x00000249540C0710>', model_object=<catboost.core.CatBoostRegressor object at 0x00000249540C0710>, train_rmse=1049.2571667403834, test_rmse=1078.9955796179067, train_accuracy=0.6247136238163542, test_accuracy=0.5878266028840662, model_accuracy=0.6057090382273824, index_number=2). 
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [StackingCVRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Train Score		 Test Score		 Average Score
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 0.620582284080152		 0.5836314368593534		0.6015399490126778
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Diff test train accuracy: [0.036950847220798666].
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Train root mean squared error: [1055.0167323729775].
2022-10-11 at 18:54:48 | INFO |evaluate_regression_model |
 Test root mean squared error: [1084.4727718005925].
2022-10-11 at 18:54:48 | INFO |initiate_model_trainer |
 Best found model on both training and testing dataset.
2022-10-11 at 18:54:48 | INFO |initiate_model_trainer |
 Saving model at path: C:\Users\Nplite\Desktop\BigMart-Sales-Data-master\BigmartsalesPrediction\app_artifact\model_training\19bec607-a0c3-4971-bf66-540bfce548cb\trained_model\model.pkl
2022-10-11 at 18:54:48 | INFO |initiate_model_trainer |
 Model Trainer Artifact: ModelTrainerArtifact(is_trained=True, message='Model Trained successfully', trained_model_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\model_training\\19bec607-a0c3-4971-bf66-540bfce548cb\\trained_model\\model.pkl', train_rmse=1049.2571667403834, test_rmse=1078.9955796179067, train_accuracy=0.6247136238163542, test_accuracy=0.5878266028840662, model_accuracy=0.6057090382273824)
2022-10-11 at 18:54:48 | INFO |__del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-10-11 at 18:54:48 | INFO |get_model_evaluation_config |
 Model Evaluation Config: ModelEvaluationConfig(model_evaluation_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\model_evaluation\\model_evaluation.yaml', saved_model_dir='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\saved_models', time_stamp='2022-10-11-18-52-12').
2022-10-11 at 18:54:48 | INFO |__init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Evaluation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-10-11 at 18:54:48 | INFO |initiate_model_evaluation |
 Converting target column into numpy array.
2022-10-11 at 18:54:48 | INFO |initiate_model_evaluation |
 Conversion completed target column into numpy array.
2022-10-11 at 18:54:48 | INFO |initiate_model_evaluation |
 Dropping target column from the dataframe.
2022-10-11 at 18:54:48 | INFO |initiate_model_evaluation |
 Dropping target column from the dataframe completed.
2022-10-11 at 18:54:48 | INFO |__del__ |
 ====================Model Evaluation log completed.==================== 
2022-10-11 at 18:57:20 | INFO |predict |
 predict called 
2022-10-11 at 18:57:20 | INFO |predict |
 prediction_data: <BigmartsalesPrediction.app_entity.app_predictor.Prediction_Data object at 0x000002494ED4BC18>
2022-10-11 at 18:57:20 | INFO |predict |
 app_predictor: <BigmartsalesPrediction.app_entity.app_predictor.App_predictor object at 0x000002495409DD68>
2022-10-11 at 18:57:20 | INFO |transform |
 Transforming data
2022-10-11 at 18:57:20 | INFO |predict |
 context: {'predictor_data': {'Item_Identifier': ['Food'], 'Item_Fat_Content': ['Low Fat'], 'Item_Type': ['Meat'], 'Outlet_Identifier': ['OUT049'], 'Outlet_Type': ['Supermarket Type1'], 'Item_MRP': [141.61], 'Item_Visibility': [0.01676], 'Item_Weight': [17.5], 'Outlet_Location_Type': ['Tier 1'], 'Outlet_Size': ['Medium'], 'Outlet_Establishment_Year': [1999]}, 'item_outlet_sales': array([2224.54341261])}
2022-10-11 at 18:57:54 | INFO |render_log_dir |
 req_path: logs
2022-10-11 at 19:04:16 | INFO |render_log_dir |
 req_path: logs
2022-10-11 at 19:04:21 | INFO |render_log_dir |
 req_path: logs/log_2022-10-11-18-52-12.log
2022-10-11 at 19:05:08 | INFO |get_training_pipeline_config |
 Training pipeline config: TrainingPipelineConfig(experiment_id='6b7818c7-5438-4a34-9b61-cab4e5a735f3', previous_experiment_id=None, artifact_dir='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact', experiment_file_path='C:\\Users\\Nplite\\Desktop\\BigMart-Sales-Data-master\\BigmartsalesPrediction\\app_artifact\\experiment\\experiment.csv')
